#!/bin/bash
# Default values
DISPLAY_NUM="0"
URLS=()
CHROME_BIN="chromium"
CHROME_COMMAND="$CHROME_BIN --incognito --disable-infobars --disable-suggestions-service --no-first-run --start-fullscreen --new-window"
TOGGLE_INTERVAL=""
LOG_FILE="i3dashctl.log"
SPLIT_DASHBOARD=false
HELP="-h"
#USER=		## Needed to run over ssh or as root
# Function to parse command line arguments
parse_args() {
    while getopts "u:d:t:l:s:h:" opt; do
        case ${opt} in
            u) URLS+=("$OPTARG") ;;
            d) DISPLAY_NUM="$OPTARG" ;;
	    t) TOGGLE_INTERVAL="$OPTARG" ;;
            l) LOG_FILE="$OPTARG" ;;	    
            s) SPLIT_DASHBOARD="$OPTARG" ;;
            h) HELP="-h" ;;
#            b) CHROME_BIN="$OPTARG" ;;
            \?) echo "Invalid option: -$OPTARG" >&2 exit 1 ;;
        esac
    done
}

echo "Session: $(date +'%m/%d/%Y')" >> $LOG_FILE
# Function to kill all chromium-browser processes
kill_chrome() {
    pkill -f $CHROME_BIN
}
 
# Help 
function usage {
   cat << EOF


   Usage: i3dashctl -u reddit.com -u github.com -d 0 -t 5 

	-u	url
	-l 	Log file (Default: i3dashctl.log)
	-d 	Display Number (Default: 0)
	-t	Toggle Interval (Default: disabled)
	-s	Split Dashboard (Default: false)


EOF
   exit 1
}

# Function to create a new workspace and launch chromium-browser with specified URL
launch_chrome() {
    local workspace=$1
    local url=$2
echo "         Using DISPLAY $DISPLAY_NUM" &
echo "         Opening ${URLS[$i]}" &
$CHROME_COMMAND ${URLS[$i]} >> $LOG_FILE &> /dev/null &
sleep 3
i3-msg [instance="^$CHROME_BIN$"] fullscreen disable >> $LOG_FILE &> /dev/null &
}

toggle_workspace() {
  i3-msg workspace next >> $LOG_FILE &> /dev/null
}

# Main execution starts here
parse_args "$@"
               
# Kill all existing chromium-browser processes
kill_chrome

export DISPLAY=:$DISPLAY_NUM


echo " "
echo "  i3Dashctl (Use the -h flag to print help)"
if [ "$TOGGLE_INTERVAL" > 0 ]; then
echo " "
echo "   Toggle Interval: $TOGGLE_INTERVAL"
fi
echo " "
# Create workspaces and launch chromium-browser for each URL

if [ "$SPLIT_DASHBOARD" = true ] ; then
echo "   Split Dashboard: Enabled" 
echo " "
for ((i=0; i<${#URLS[@]}; i++)); do
    workspace=$((i+1))
    url="${URLS[$i]}"
echo "   i3Dash 1"
echo "       ${URLS[$i]}"
i3-msg workspace "  1" &> /dev/null
sleep 5
launch_chrome
sleep 2
echo " "
done


else
for ((i=0; i<${#URLS[@]}; i++)); do
    workspace=$((i+1))
    url="${URLS[$i]}"
echo "   i3Dash $((i+1))"
echo "       ${URLS[$i]}"
i3-msg workspace "  $((i+1))" &> /dev/null 
sleep 5
launch_chrome
echo " "
done

fi

########################

# Start toggling i3 workspaces
if [ "$TOGGLE_INTERVAL" > 0 ]; then
while true; do
  toggle_workspace
  sleep $TOGGLE_INTERVAL
 done

fi

#if [ "$HELP" = "-h" ] ; then
#usage;


#fi
#   
# You can run this script in a terminal by providing the URLs as command-line arguments using the `-u` flag. For example:
#                                                                                                                       
#   i3dashctl -u "https://espn.com" -u "https://reddit.com" -u "https://digg.com" -d 0 -l i3dash.log -t 5
#
#

